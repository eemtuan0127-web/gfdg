name: Free Ubuntu VPS with SSH + Nexus (Auto)

on:
  workflow_dispatch:
    inputs:
      enable_ssh:
        description: "Mở SSH (tmate) để vào máy?"
        required: true
        default: "false"
      allow_overlap:
        description: "Cho phép chạy song song khi test thủ công? (true = KHÔNG tự hủy lượt trước)"
        required: true
        default: "false"
  schedule:
    - cron: "0 */5 * * *"   # restart mỗi 5 giờ

# Concurrency:
# - Mặc định (schedule, hoặc dispatch với allow_overlap=false): lượt mới sẽ hủy lượt cũ của cùng nhánh.
# - Khi dispatch với allow_overlap=true: KHÔNG hủy (dễ test, tránh 'operation was canceled').
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: ${{ ! (github.event_name == 'workflow_dispatch' && github.event.inputs.allow_overlap == 'true') }}

jobs:
  vps:
    runs-on: ubuntu-latest
    timeout-minutes: 295

    env:
      # Đổi node-id tại đây
      NEXUS_NODE_IDS: "35789137 35928265 35929573"

    steps:
      - name: Print context (debug)
        run: |
          echo "event_name=${{ github.event_name }}"
          echo "ref=${{ github.ref }}"
          echo "allow_overlap=${{ github.event.inputs.allow_overlap || 'false' }}"
          echo "cancel_in_progress=$(( ! ( '${{ github.event_name }}' = 'workflow_dispatch' && '${{ github.event.inputs.allow_overlap }}' = 'true' ) ))"

      - name: Prep & tools
        run: |
          set -euxo pipefail
          sudo apt-get update
          sudo apt-get install -y --no-install-recommends \
            tmux curl ca-certificates git protobuf-compiler
          echo "$HOME/.local/bin" >> "$GITHUB_PATH"
          echo "$HOME/.nexus/bin"  >> "$GITHUB_PATH"

      - name: Install Nexus CLI (non-interactive)
        run: |
          set -euxo pipefail
          curl -fsSL https://cli.nexus.xyz/ -o /tmp/nexus_install.sh
          chmod +x /tmp/nexus_install.sh
          yes | /bin/bash /tmp/nexus_install.sh
          echo "$HOME/.nexus/bin" >> "$GITHUB_PATH"
          export PATH="$HOME/.nexus/bin:$PATH"
          command -v nexus-network
          nexus-network --version || true

      - name: Start 3 Nexus nodes in tmux
        run: |
          set -euxo pipefail
          for s in node1 node2 node3 dash; do tmux kill-session -t "$s" || true; done
          NX_BIN="$(command -v nexus-network)"; test -x "$NX_BIN"

          i=1
          for ID in $NEXUS_NODE_IDS; do
            SESSION="node${i}"
            LOG="/tmp/${SESSION}.log"
            : > "${LOG}"
            tmux new-session -d -s "$SESSION" "bash -lc '$NX_BIN start --node-id ${ID} >> ${LOG} 2>&1'"
            echo "Started $SESSION with node-id=$ID (log: $LOG)"
            i=$((i+1))
          done

          # Dashboard 3 ô log
          tmux new-session -d -s dash "bash -lc 'tail -f /tmp/node1.log'"
          tmux split-window -h  "bash -lc 'tail -f /tmp/node2.log'"
          tmux split-window -v  "bash -lc 'tail -f /tmp/node3.log'"
          tmux select-layout tiled
          tmux set -t dash mouse on || true
          tmux ls || true

      - name: Auto-attach dashboard on login
        run: |
          set -eux
          echo 'if [ -z "$TMUX" ] && tmux has-session -t dash 2>/dev/null; then tmux attach -t dash; fi' >> ~/.bashrc
          echo 'echo "Detach tmux: Ctrl+b rồi nhấn d"' >> ~/.bashrc

      - name: (Optional) Open SSH (tmate)
        if: ${{ github.event_name == 'workflow_dispatch' && inputs.enable_ssh == 'true' }}
        uses: mxschmitt/action-tmate@v3
        with:
          limit-access-to-actor: false

      - name: Keep job alive while nodes run
        run: |
          set -euxo pipefail
          touch /tmp/node1.log /tmp/node2.log /tmp/node3.log
          tail -f /tmp/node1.log /tmp/node2.log /tmp/node3.log
